public class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        boolean isNeg = ((numerator < 0 && denominator > 0) || (numerator > 0 && denominator < 0));
        long num = Math.abs((long)numerator);
        long den = Math.abs((long)denominator);
        Map<Long, Integer> remains = new HashMap<>();
        StringBuilder sb = new StringBuilder();
        long res = num / den;
        sb.append(res);
        num = num % den;
        if (num != 0) {
            sb.append(".");
        }
        int index = 0;
        while (num != 0) {
            num *= 10;
            res = Math.abs(num / den);
            if (!remains.containsKey(num)) {
                sb.append(res);
                remains.put(num, index++);
            } else {
                int findex = 1 + remains.get(num) + sb.indexOf(".");
                sb.insert(findex, '(');
                sb.append(")");
                break;
            }
            num %= den;
        }
        if (isNeg) {
            sb.insert(0, "-");
        }
        return sb.toString();
    }
}
