public class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        Arrays.sort(candidates);
        return helper(candidates,target,0);
    }
    public List<List<Integer>> helper(int[] candidates, int target, int start) {
         List<List<Integer>> res = new ArrayList<>();
         for (int i = start; i < candidates.length; i++) {
             if (candidates[i] < target) {
                 for (List<Integer> ls : helper(candidates, target - candidates[i], i)){
                     ls.add(0, candidates[i]);
                     res.add(ls);
                 }
             } else if (candidates[i] == target) {
                 List<Integer> lst = new ArrayList<>();
                 lst.add(candidates[i]);
                 res.add(lst);
             } else {
                 break;
             }
         }
         return res;
    }
}
