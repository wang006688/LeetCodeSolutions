public class Solution {
    public void gameOfLife(int[][] board) {
        if (board == null || board.length == 0) return;
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] == 1 && (countN(board, i, j) > 3 || countN(board, i, j) < 2)) {
                    board[i][j] = 2;
                } else if (board[i][j] == 0 && countN(board, i, j) == 3) {
                    board[i][j] = -1;
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] == 2)  board[i][j] = 0;
                else if (board[i][j] == -1)  board[i][j] = 1;
            }
        }
    }
    public int countN(int[][] board, int i, int j) {
        int count = 0;
        if (i - 1 >= 0) {
            if (j - 1 >= 0 && board[i - 1][j - 1] > 0) count++;
            if (j + 1 < board[0].length && board[i - 1][j + 1] > 0) count++;
            if (board[i - 1][j] > 0) count++;
        } 
        if (i + 1 < board.length) {
            if (j - 1 >= 0 && board[i + 1][j - 1] > 0) count++;
            if (j + 1 < board[0].length && board[i + 1][j + 1] > 0) count++;
            if (board[i + 1][j] > 0) count++;
        }
        if (j - 1 >= 0 && board[i][j - 1] > 0) count++;
        if (j + 1 < board[0].length && board[i][j + 1] > 0) count++;
        
        return count;
    }
}
