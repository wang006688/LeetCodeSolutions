public class Solution {
    public int longestValidParentheses(String s) {
        if(s==null || s.length()==0) return 0;

        char[] cs = s.toCharArray();
        int[] dp = new int[cs.length]; // dp[i] means the longest valid parentheses end with cs[i].

        int max=0;
        for(int i=1;i<cs.length;i++){
            if(cs[i]==')') {
                int j=i-1-dp[i-1];
                if(j>=0 && cs[j]=='(') {
                    dp[i]=dp[i-1]+2+(j>0?dp[j-1]:0); // add dp[j-1], because this case: ( ) ( ) 
                }
            }
            if(dp[i]>max) max=dp[i];
        }
        return max;
    }
}
