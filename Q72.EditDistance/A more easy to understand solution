int minDistance(string word1, string word2) {
    int  m = word1.length(), n = word2.length();
    if (m == 0) return n;
    if (n == 0) return m;

    // table[i][j]: distance from words1.substr(0, i) to words2.substr(0, j) 
    int table[m+1][n+1];
    for (int i = 0; i <= m; ++i) table[i][0] = i;
    for (int j = 0; j <= n; ++j) table[0][j] = j;
    // table[i][j] is the min distance between the next three values
    // from table[i-1][j], table[i][j-1], or table[i-1][j-1] to table[i][j]
    for (int i = 1; i <= m; ++i) {
        for (int j = 1; j <= n; ++j) {
            int cost = (word1[i-1] == word2[j-1] ? 0 : 1);
            table[i][j] = min(min(table[i-1][j] + 1, table[i][j-1] + 1), table[i-1][j-1] + cost);
        }
    }

    return table[m][n];
}
