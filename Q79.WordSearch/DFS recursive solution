public class Solution {
    boolean[][] found;
    public boolean exist(char[][] board, String word) {
        int m = board.length;
        int n = board[0].length;
        found = new boolean[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (board[i][j] == word.charAt(0)) {
                    if (helper(board, word, 0, i, j)) {
                        return true;
                    }
                }
            }
        }
        return false;
    }
    public boolean helper(char[][] board, String s, int len, int i, int j) {
        if (len == s.length()) {
            return true;
        }
        int m = board.length;
        int n = board[0].length;
        if (i < 0 || i >= m || j < 0 || j >= n || board[i][j] != s.charAt(len) || found[i][j]) {
            return false;
        }
        found[i][j] = true;
        if (helper(board, s, len + 1, i - 1, j) ||
                helper(board, s, len + 1, i + 1, j) ||
                helper(board, s, len + 1, i, j + 1)||
                helper(board, s, len + 1, i, j - 1)) {
            return true;
        }
        found[i][j] = false;
        return false;
    }
}
