public class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if (nums == null || nums.length == 0) return res;
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 3; i++) {
            for (int j = i + 1; j < nums.length - 2; j++) {
                if (i == 0 || (i > 0 && nums[i] != nums[i - 1])) {
                    int low = j + 1, high = nums.length - 1, mid = target - nums[i] - nums[j];
                    while (low < high) {
                        if (nums[low] + nums[high] == mid) {
                            if (!res.contains(Arrays.asList(nums[i], nums[j],nums[low], nums[high]))) {
                                res.add(Arrays.asList(nums[i], nums[j],nums[low], nums[high]));
                            }
                            while (low < high && nums[low] == nums[low + 1]) low++;
                            while (low < high && nums[high] == nums[high - 1]) high--;
                            low++;
                            high--;
                            } else if (nums[low] + nums[high] < mid) {
                                low++;
                            } else {
                                high--;
                            }
                    }
                }
            }
        }
        return res;
    }
}
