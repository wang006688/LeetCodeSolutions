public class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] res = new int[2];
        int mid = binarySearch(nums, target);
        if (mid == -1) {
            int[] rest = {-1, -1};
            return rest;
        }
        int i = 1;
        while(mid + i < nums.length) {
            if (nums[i + mid] != target) {
                break;
            }
            i++;
        }
        res[1] = mid + i - 1;
        int j = 1;
        while(mid - j >= 0) {
            if(nums[mid - j] != target) {
                break;
            }
            j++;
        }
        res[0] = mid - j + 1;
        return res;
    }
    public int binarySearch(int[] nums, int target) {
        int left = 0, right = nums.length - 1;
        while (left <= right) {
            int mid = (left + right) / 2;
            if (nums[mid] < target) {
                left = mid + 1;
            } else if (nums[mid] > target) {
                right = mid - 1;
            } else {
                return mid;
            }
        }
        return -1;
    }
}
