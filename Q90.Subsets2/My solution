public class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i <= nums.length; i++) {
            helper(res, new ArrayList<Integer>(), i, 0, nums);
        }
        return res;
    }
    public void helper(List<List<Integer>> res, List<Integer> each, int k, int level, int[] nums) {
        if (each.size() == k) {
            if (!res.contains(each)) {
                res.add(each);
            }
            return;
        }
        for (int i = level; i < nums.length; i++) {
            List<Integer> temp = new ArrayList<>(each);
            temp.add(nums[i]);
            helper(res, temp, k, i + 1, nums);
        }
    }
}
