public class Solution {
    public int[][] generateMatrix(int n) {
        int[][] res = new int[n][n];
        if (n == 0) return res;
        int left = 0, right = n - 1;
        int top = 0, bottom = n - 1;
        int count = 1;
        while (true) {
            for (int j = left; j <= right; j++) {
                res[top][j] = count++;
            }
            top++;
            if (outBound(top,bottom,left,right)) {
                break;
            }
            for (int i = top; i <= bottom; i++) {
                res[i][right] = count++;
            }
            right--;
            if (outBound(top,bottom,left,right)) {
                break;
            }
            for (int j = right; j >= left; j--) {
                res[bottom][j] = count++;
            }
            bottom--;
            if (outBound(top,bottom,left,right)) {
                break;
            }
            for (int i = bottom; i >= top; i--) {
                res[i][left] = count++;
            }
            left++;
            if (outBound(top,bottom,left,right)) {
                break;
            }
        }
        return res;
    }
    public boolean outBound(int top, int bottom, int left, int right) {
        if (left > right || bottom < top) {
            return true;
        } else {
            return false;
        }
    }
}
