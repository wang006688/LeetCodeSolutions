/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode total = head;
        ListNode delayed = head; // The node that is n nodes delayed from the "total" node.
        while(total != null) {
            total = total.next;
            if(n-- < 0) {
                delayed = delayed.next;
            }
        }
        if(n == 0) {
            head = head.next;
        } else if (n < 0) {
            delayed.next = delayed.next.next;
        } else {
            return null;
        }
        return head;
    }
}
